/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pantallasDeInterfaz;

import com.mycompany.gestor_actividades.Actividad;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import listaUsuarios.Usuario;
import pantallasDeInterfaz.crearSubActividad;
import java.text.SimpleDateFormat;

/**
 *
 * @author PC
 */
public class pantalla3 extends javax.swing.JPanel {
    private Usuario usuario;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form pantallaInicio
     */
    public pantalla3(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        iniciarEstilos();
        cargarDatos();
        actualizarTablaDatos();
        configurarTabla();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        texto1 = new javax.swing.JLabel();
        etiquetaImagen = new javax.swing.JLabel();
        etiqueta1 = new javax.swing.JLabel();
        etiqueta2 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaDatos = new javax.swing.JTable(){
            public boolean isCellEditable(int row,int column){
                return false;
            }

        };
        tablaDatos.setBackground(new java.awt.Color(241, 254, 255));
        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actividad", "Partes", "Tiempo estimado", "Prioridad", "Crear"
            }
        ));
        tablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDatos);

        texto1.setText("Lista de actividades - Micro Tareas");

        etiquetaImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/notas.png"))); // NOI18N

        etiqueta1.setText("Se ordena en base a :  ");

        etiqueta2.setText("Fecha, prioridad, tiempo estimado y si todo lo anterior choca por decisión del usuario");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(texto1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(etiquetaImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiqueta1)
                            .addComponent(etiqueta2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(texto1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(etiquetaImagen))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(etiqueta1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiqueta2)))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void cargarDatos() {
        usuario.cargarArbolActividades();
    }


    private void actualizarTablaDatos() {
        List<Actividad> actividades = usuario.getArbolActividades().obtenerActividades();
        DefaultTableModel model = (DefaultTableModel) tablaDatos.getModel();
        model.setRowCount(0);

        SimpleDateFormat sdf = new SimpleDateFormat("dd MMMM yyyy", new Locale("es", "ES")); // Formato de fecha en español

        for (Actividad actividad : actividades) {
            String fechaFormateada = sdf.format(actividad.getFechaLimite());
            Object[] rowData = {
                    actividad.getNombre(),
                    actividad.getSubActividades().size()+" sub-tareas",
                    actividad.getTiempoEstimado() +" minutos",
                    actividad.getPrioridad(),
                    "Crear",
                    
            };
            model.addRow(rowData);
        }

    }


    private void configurarTabla() {
        tablaDatos.setDefaultEditor(Object.class, null);
        tablaDatos.getTableHeader().setReorderingAllowed(false);
        tablaDatos.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer());

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        for (int i = 0; i < tablaDatos.getColumnCount(); i++) {
            tablaDatos.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        tablaDatos.getTableHeader().setDefaultRenderer(new HeaderRenderer());
    }




    private void tablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosMouseClicked

        int columnaBotonModificar = 4;
        int columnaBotonVer = 1;
        int fila = tablaDatos.rowAtPoint(evt.getPoint());
        if (fila != -1) {
            String nombreActividad = (String) tablaDatos.getValueAt(fila, 0);
            if (tablaDatos.columnAtPoint(evt.getPoint()) == columnaBotonModificar) {
              Actividad actividad = usuario.getArbolActividades().obtenerActividades().get(fila);
                crearSubActividad crearSubActividadFrame = new crearSubActividad(usuario,actividad.getNombre(),actividad.getFechaLimite(),actividad.getPrioridad());
                crearSubActividadFrame.setVisible(true);
                Component component = (Component) evt.getSource();
                javax.swing.SwingUtilities.getWindowAncestor(component).dispose();
                
            }
            if(tablaDatos.columnAtPoint(evt.getPoint()) == columnaBotonVer){
       //         List<Actividad> subactividades =usuario.getArbolActividades().obtenerActividades().get(fila).getSubActividades();
Actividad actividad = usuario.getArbolActividades().obtenerActividades().get(fila);
            List<Actividad> subactividades = actividad.getSubActividades();            
// Construyes el mensaje con las subactividades
            StringBuilder mensaje = new StringBuilder();
            mensaje.append("Subactividades de ").append(actividad.getNombre()).append(":\n");
            
            for (Actividad subactividad : subactividades) {
                mensaje.append("\nNombre: ").append(subactividad.getNombre());
                mensaje.append("\nDescripción: ").append(subactividad.getDescripcion());
       //         mensaje.append("\nFecha Límite: ").append(dateFormat.format(subactividad.getFechaLimite()));
                mensaje.append("\nTiempo Estimado: ").append(subactividad.getTiempoEstimado()).append(" minutos");
       //         mensaje.append("\nPrioridad: ").append(subactividad.getPrioridad());
                mensaje.append("\n--------------------------\n");
            }
            
            // Muestra el mensaje en un JOptionPane
            JOptionPane.showMessageDialog(null, mensaje.toString(), "Subactividades de " + actividad.getNombre(), JOptionPane.INFORMATION_MESSAGE);
        
            }
        }

    }//GEN-LAST:event_tablaDatosMouseClicked
    private void iniciarEstilos(){
        //Coleres de textos
        texto1.putClientProperty( "FlatLaf.styleClass", "h1" );
        texto1.setForeground(new Color(51, 153, 255));
        etiqueta1.putClientProperty( "FlatLaf.styleClass", "h2" );
        etiqueta1.setForeground(new Color(51, 153, 255));
        etiqueta2.putClientProperty( "FlatLaf.styleClass", "h3" );
        etiqueta2.setForeground(new Color(51, 153, 255));
    }
    private static class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }
    private static class HeaderRenderer extends DefaultTableCellRenderer {
        public HeaderRenderer() {
            setOpaque(true);
            setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setBackground(new Color(51, 153, 255)); // Cambia el color de fondo al color RGB (51, 153, 255)
            setForeground(Color.WHITE); // Cambia el color del texto a blanco
            return this;
        }
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etiqueta1;
    private javax.swing.JLabel etiqueta2;
    private javax.swing.JLabel etiquetaImagen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JLabel texto1;
    // End of variables declaration//GEN-END:variables
}
